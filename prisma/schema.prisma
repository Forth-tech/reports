// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Autenticação

model User {
  id             Int            @id @default(autoincrement())
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  email          String         @unique
  name           String?
  hashedPassword String
  hash           String
  RefreshToken   RefreshToken[]
  Audit          Audit[]
}

model RefreshToken {
  id         Int       @id @default(autoincrement())
  userId     Int
  token      String    @unique @db.VarChar(512)
  userAgent  String
  userHost   String
  created_at DateTime  @default(now())
  deleted_at DateTime?
  user       User      @relation(fields: [userId], references: [id])
}

// Marketing

model Publication {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  name            String
  network         Network
  url             String
  content         String?
  format          Format
  gainedFollowers Int?
  clicks          Int?
  impressions     Int?
  likes           Int?
  shares          Int?
  saves           Int?
  reach           Int?
  profileAccess   Int?
  date            DateTime
}

model Daily {
  id              Int      @id @default(autoincrement())
  network         Network
  date            DateTime
  updatedAt       DateTime @updatedAt
  gainedFollowers Int?
  lostFollowers   Int?
  investedValue   Int?
  clicks          Int?
  impressions     Int?
  engagement      Int?
  reach           Int?
}

model Networks {
  id      Int     @id @default(autoincrement())
  network Network
  url     String
  name    String

  @@unique([network, name])
}

model AdCampaign {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String
  goal        String
  networkName String?   @unique
  networkId   String?
  networkGoal String?
  startDate   DateTime
  endDate     DateTime?
}

enum Network {
  FACEBOOK
  INSTAGRAM
  TWITTER
  YOUTUBE
  TIKTOK
}

enum Format {
  IGTV
  REELS
  CARROUSSEL
  STATIC
  VIDEO
}

// Vendas

model City {
  id        Int      @id @default(autoincrement())
  name      String
  state     State    @relation(fields: [id_state], references: [id])
  id_state  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Store     Store[]

  @@map("TB_City")
}

model State {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cidade    City[]

  @@map("TB_State")
}

model Client {
  id           Int      @id @default(autoincrement())
  name         String
  internalCode String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Store        Store[]

  @@map("TB_Client")
}

model Store {
  id           Int        @id @default(autoincrement())
  name         String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  internalCode String     @unique
  id_client    Int
  Client       Client     @relation(fields: [id_client], references: [id])
  id_city      Int
  City         City       @relation(fields: [id_city], references: [id])
  Purchase     Purchase[]
  Seller       Seller     @relation(fields: [id_seller], references: [id])
  id_seller    Int

  @@map("TB_Store")
}

model Purchase {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  internalCode String   @unique
  nf           String
  date         DateTime?
  type         String?
  id_store     Int
  Store        Store    @relation(fields: [id_store], references: [id])
  Item         Item[]
  Seller       Seller?  @relation(fields: [id_seller], references: [id])
  id_seller    Int?

  @@map("TB_Purchase")
}

model Item {
  id          Int      @id @default(autoincrement())
  // Price in cents
  price       Int
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  id_purchase Int
  id_product  Int
  Purchase    Purchase @relation(fields: [id_purchase], references: [id])
  Product     Product  @relation(fields: [id_product], references: [id])

  @@map("TB_PurchaseItem")
}

model Product {
  id           Int      @id @default(autoincrement())
  name         String
  internalCode String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Item         Item[]
  Family       Family?  @relation(fields: [id_family], references: [id])
  id_family    Int?

  @@map("TB_Product")
}

model Family {
  id           Int       @id @default(autoincrement())
  name         String
  internalCode String    @unique
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Product      Product[]

  @@map("TB_ProductFamily")
}

model Seller {
  id            Int         @id @default(autoincrement())
  name          String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  internalCode  String      @unique
  Sale          Purchase[]
  Store         Store[]
  Supervisor    Supervisor? @relation(fields: [id_supervisor], references: [id])
  id_supervisor Int?

  @@map("TB_Seller")
}

model Supervisor {
  id           Int      @id @default(autoincrement())
  name         String
  internalCode String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Seller       Seller[]

  @@map("TB_Supervisor")
}

// Audits

model Audit {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  id_auditevent Int
  id_external   Int
  AuditEvent    AuditEvent @relation(fields: [id_auditevent], references: [id])
  id_user       Int
  information   String
  User          User       @relation(fields: [id_user], references: [id])

  @@map("TB_Audit")
}

model AuditEvent {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  id_mappedto  String
  description  String
  Audit        Audit[]

  @@map("TB_AuditEvent")
}
